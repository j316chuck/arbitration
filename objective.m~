classdef objective
    %Evaluate objective costs
    
    properties
        jerk
        avg_jerk  
        dist_to_goal
        avg_dist_to_goal
    end
    
    methods
        function obj = objective()
        end
        
        function [d] = l2_dist(x, y) 
            d = (x .^ 2 + y .^ 2) .^ 0.5;
        end 
        
        function obj = calc_jerk(obj, x, y, dt)
            if length(x) < 4 || length(y) < 4 || length(x) ~= length(y)
                obj.jerk = [];
                obj.avg_jerk = [];
                return 
            end
            vx = x(2:length(x)) - x(1:length(x) - 1);
            vy = y(2:length(y)) - y(1:length(x) - 1); 
            ax = vx(2:length(vx)) - vx(1:length(vx) - 1); 
            ay = vy(2:length(vy)) - vy(1:length(vy) - 1); 
            jx = ax(2:length(ax)) - ax(1:length(ax) - 1);
            jy = ay(2:length(ay)) - ay(1:length(ay) - 1); 
            obj.jerk =  1/dt .* l2_dist(jx, jy);
            obj.avg_jerk = mean(obj.jerk); 
        end 

        function obj = calc_dist_to_goal(obj, x, y, goal)
            obj.dist_to_goal = l2_dist(x(:) - goal(1), y(:) - goal(2));
            obj.avg_dist_to_goal = mean(obj.dist_to_goal);
        end 
        
        function obj = calc_dist_to_opt_traj(obj, x, y, goal)
            obj.dist_to_goal = l2_dist(x(:) - goal(1), y(:) - goal(2));
            obj.avg_dist_to_goal = mean(obj.dist_to_goal);
        end 
        
        function obj = calc_safety_cost(obj, x, y, ths, safety_planner)
            
            obj.dist_to_goal = l2_dist(x(:) - goal(1), y(:) - goal(2));
            obj.avg_dist_to_goal = mean(obj.dist_to_goal);
            brs_planner.get_value(state(1:3));
        end 
    end
end

